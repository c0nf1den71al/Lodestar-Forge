services:
    store:
        image: postgres:14-alpine
        ports:
            - 5432:5432
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
            POSTGRES_USER: ${POSTGRES_USER:-}
            POSTGRES_DB: ${POSTGRES_DB:-}
        volumes:
            - pgdata:/var/lib/postgresql/data

    nucleus:
        build:
            context: ./nucleus
            dockerfile: dev.Dockerfile
        # Remove volume in prod
        volumes:
            - ./nucleus:/app
            - /app/node_modules
        ports:
            - ${NUCLEUS_PORT:-}:${NUCLEUS_PORT:-}
        environment:
            NUCLEUS_PORT: ${NUCLEUS_PORT:-}
            NUCLEUS_SECRET: ${NUCLEUS_SECRET:-}
            STORE_ENCRYPTION_KEY: ${STORE_ENCRYPTION_KEY:-}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
            POSTGRES_USER: ${POSTGRES_USER:-}
            POSTGRES_DB: ${POSTGRES_DB:-}
            POSTGRES_HOST: store
        depends_on:
            - store
        cap_add:
            - NET_ADMIN # Needed by tailscale
        devices:
            - /dev/net/tun # Needed by tailscale

    command:
        build:
            context: ./command
            dockerfile: dev.Dockerfile
        volumes:
            - ./command:/app
            - /app/node_modules
        ports:
            - 3000:3000
        environment:
            COMMAND_SECRET: ${COMMAND_SECRET:-}
            COMMAND_PORT: ${COMMAND_PORT:-}
            NUCLEUS_PORT: ${NUCLEUS_PORT:-}
        depends_on:
            - store

    # studio:
    #   build:
    #     context: ./command
    #     dockerfile: studio.Dockerfile
    #   network_mode: host
    #   environment:
    #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
    #     POSTGRES_USER: ${POSTGRES_USER:-}
    #     POSTGRES_DB: ${POSTGRES_DB:-}
    #     POSTGRES_HOST: 127.0.0.1
    #   depends_on:
    #     - store
    #     - command

    radar:
        build:
            context: ./radar
            dockerfile: Dockerfile
        volumes:
            - ./radar:/app
            - /app/node_modules
        environment:
            VT_API_KEY: ${VT_API_KEY:-}
            NUCLEUS_PORT: ${NUCLEUS_PORT:-}
            NUCLEUS_SECRET: ${NUCLEUS_SECRET:-}
        depends_on:
            - store
            - nucleus

volumes:
    pgdata:
